import{_ as s,c as a,o as t,ae as h}from"./chunks/framework.Bt0T77vy.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"tutorial/nextjs-project.md","filePath":"tutorial/nextjs-project.md"}'),l={name:"tutorial/nextjs-project.md"};function n(e,i,k,r,p,d){return t(),a("div",null,i[0]||(i[0]=[h(`<p>素晴らしい進捗ですね！Next.js の App Router と Cloudflare Workers + D1 の構成がきれいに整理されていて、拡張性もあり、非常に良い設計です👏</p><hr><h2 id="✅-現在の実装状況-まとめ" tabindex="-1">✅ 現在の実装状況（まとめ） <a class="header-anchor" href="#✅-現在の実装状況-まとめ" aria-label="Permalink to &quot;✅ 現在の実装状況（まとめ）&quot;">​</a></h2><h3 id="フロントエンド-next-js-app-router" tabindex="-1">フロントエンド（Next.js App Router） <a class="header-anchor" href="#フロントエンド-next-js-app-router" aria-label="Permalink to &quot;フロントエンド（Next.js App Router）&quot;">​</a></h3><ul><li>商品一覧ページ (<code>/</code>)</li><li>商品詳細ページ (<code>/product/[id]</code>)</li><li>カートページ (<code>/cart</code>)</li><li>チェックアウトページ（構造あり）</li></ul><h3 id="バックエンド-cloudflare-workers" tabindex="-1">バックエンド（Cloudflare Workers） <a class="header-anchor" href="#バックエンド-cloudflare-workers" aria-label="Permalink to &quot;バックエンド（Cloudflare Workers）&quot;">​</a></h3><ul><li><code>GET /api/products</code>: 全商品の取得</li><li><code>POST /api/products</code>: 商品の登録</li><li>CORS設定済み</li><li>DBスキーマファイル（D1）存在</li></ul><hr><h2 id="🧭-次の実装計画-フェーズ別" tabindex="-1">🧭 次の実装計画（フェーズ別） <a class="header-anchor" href="#🧭-次の実装計画-フェーズ別" aria-label="Permalink to &quot;🧭 次の実装計画（フェーズ別）&quot;">​</a></h2><hr><h3 id="🚧-第一フェーズ-商品周りの機能完成" tabindex="-1">🚧 <strong>第一フェーズ：商品周りの機能完成</strong> <a class="header-anchor" href="#🚧-第一フェーズ-商品周りの機能完成" aria-label="Permalink to &quot;🚧 **第一フェーズ：商品周りの機能完成**&quot;">​</a></h3><h4 id="✅-実装するエンドポイント" tabindex="-1">✅ 実装するエンドポイント <a class="header-anchor" href="#✅-実装するエンドポイント" aria-label="Permalink to &quot;✅ 実装するエンドポイント&quot;">​</a></h4><ul><li>[ ] <code>GET /api/products/:id</code> 商品詳細取得</li><li>[ ] <code>PUT /api/products/:id</code> 商品更新</li><li>[ ] <code>DELETE /api/products/:id</code> 商品削除</li></ul><h4 id="✅-対応するフロントエンド" tabindex="-1">✅ 対応するフロントエンド <a class="header-anchor" href="#✅-対応するフロントエンド" aria-label="Permalink to &quot;✅ 対応するフロントエンド&quot;">​</a></h4><ul><li>[ ] 商品詳細ページで商品の取得（SSR or CSR）</li><li>[ ] 商品更新フォーム（管理者向けなど）</li><li>[ ] 削除ボタンと確認ダイアログ</li></ul><hr><h3 id="🛒-第二フェーズ-カート・購入関連機能" tabindex="-1">🛒 <strong>第二フェーズ：カート・購入関連機能</strong> <a class="header-anchor" href="#🛒-第二フェーズ-カート・購入関連機能" aria-label="Permalink to &quot;🛒 **第二フェーズ：カート・購入関連機能**&quot;">​</a></h3><h4 id="✅-api" tabindex="-1">✅ API <a class="header-anchor" href="#✅-api" aria-label="Permalink to &quot;✅ API&quot;">​</a></h4><ul><li>[ ] <code>GET /api/cart</code> カートの取得</li><li>[ ] <code>POST /api/cart</code> カートへの追加</li><li>[ ] <code>DELETE /api/cart/:product_id</code> 商品をカートから削除</li><li>[ ] <code>POST /api/checkout</code> 購入処理</li></ul><h4 id="✅-フロントエンド" tabindex="-1">✅ フロントエンド <a class="header-anchor" href="#✅-フロントエンド" aria-label="Permalink to &quot;✅ フロントエンド&quot;">​</a></h4><ul><li>[ ] カートページのデータ連携</li><li>[ ] チェックアウトページでフォーム入力</li><li>[ ] チェックアウトボタン → 購入完了ページへ</li></ul><hr><h3 id="👤-第三フェーズ-ユーザー管理と認証-将来的に" tabindex="-1">👤 <strong>第三フェーズ：ユーザー管理と認証（将来的に）</strong> <a class="header-anchor" href="#👤-第三フェーズ-ユーザー管理と認証-将来的に" aria-label="Permalink to &quot;👤 **第三フェーズ：ユーザー管理と認証（将来的に）**&quot;">​</a></h3><h4 id="✅-機能候補" tabindex="-1">✅ 機能候補 <a class="header-anchor" href="#✅-機能候補" aria-label="Permalink to &quot;✅ 機能候補&quot;">​</a></h4><ul><li>[ ] ユーザー登録・ログイン（JWT or Clerk）</li><li>[ ] セッション管理（<code>Authorization</code> ヘッダー使用）</li><li>[ ] ユーザー別の注文履歴取得</li></ul><hr><h3 id="💾-第四フェーズ-db・管理画面整備" tabindex="-1">💾 <strong>第四フェーズ：DB・管理画面整備</strong> <a class="header-anchor" href="#💾-第四フェーズ-db・管理画面整備" aria-label="Permalink to &quot;💾 **第四フェーズ：DB・管理画面整備**&quot;">​</a></h3><h4 id="✅-d1-に追加するテーブル" tabindex="-1">✅ D1 に追加するテーブル <a class="header-anchor" href="#✅-d1-に追加するテーブル" aria-label="Permalink to &quot;✅ D1 に追加するテーブル&quot;">​</a></h4><ul><li>[ ] <code>orders</code>（注文情報）</li><li>[ ] <code>order_items</code>（注文内の商品一覧）</li><li>[ ] <code>users</code>（ユーザー情報）</li><li>[ ] <code>sessions</code>（セッション情報）</li></ul><h4 id="✅-管理用エンドポイント" tabindex="-1">✅ 管理用エンドポイント <a class="header-anchor" href="#✅-管理用エンドポイント" aria-label="Permalink to &quot;✅ 管理用エンドポイント&quot;">​</a></h4><ul><li>[ ] <code>/admin/products</code></li><li>[ ] <code>/admin/orders</code></li><li>[ ] 管理者ログインなど（任意）</li></ul><hr><h2 id="✍️-優先実装おすすめ順" tabindex="-1">✍️ 優先実装おすすめ順 <a class="header-anchor" href="#✍️-優先実装おすすめ順" aria-label="Permalink to &quot;✍️ 優先実装おすすめ順&quot;">​</a></h2><table tabindex="0"><thead><tr><th>優先度</th><th>内容</th><th>理由</th></tr></thead><tbody><tr><td>★★★</td><td><code>GET/PUT/DELETE /products/:id</code></td><td>商品管理の基本操作</td></tr><tr><td>★★★</td><td>カートAPIと連携</td><td>購入体験の基本</td></tr><tr><td>★★</td><td>チェックアウトAPIとページ</td><td>MVPとして意味ある機能追加</td></tr><tr><td>★</td><td>管理画面 / 認証</td><td>長期運用用</td></tr></tbody></table><hr><h2 id="🧩-次にやるべきコードタスク" tabindex="-1">🧩 次にやるべきコードタスク <a class="header-anchor" href="#🧩-次にやるべきコードタスク" aria-label="Permalink to &quot;🧩 次にやるべきコードタスク&quot;">​</a></h2><p>次の段階としては、まずこの2つをおすすめします：</p><h3 id="_1-get-api-products-id-の追加" tabindex="-1">① <code>GET /api/products/:id</code> の追加 <a class="header-anchor" href="#_1-get-api-products-id-の追加" aria-label="Permalink to &quot;① \`GET /api/products/:id\` の追加&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">// backend/src/endpoints/productGet.ts に追記</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#EEFFFF;"> productGetHandler</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#E36209;--shiki-light-font-style:inherit;--shiki-dark:#EEFFFF;--shiki-dark-font-style:italic;">c</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> Context</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">&lt;{</span><span style="--shiki-light:#E36209;--shiki-dark:#F07178;"> Bindings</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> Bindings</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> }&gt;)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">param</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">) </span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">    // 詳細取得</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> product</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;">DB</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">\`</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">SELECT * FROM products WHERE id = ?</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">first</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">product</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">) </span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">商品が見つかりません</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> },</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;"> 404</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">product</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">  // 一覧取得</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> results</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;">DB</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">SELECT * FROM products</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">results</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">};</span></span></code></pre></div><h3 id="_2-put-api-products-id-と-delete-api-products-id-の追加ファイルを新規作成" tabindex="-1">② <code>PUT /api/products/:id</code> と <code>DELETE /api/products/:id</code> の追加ファイルを新規作成 <a class="header-anchor" href="#_2-put-api-products-id-と-delete-api-products-id-の追加ファイルを新規作成" aria-label="Permalink to &quot;② \`PUT /api/products/:id\` と \`DELETE /api/products/:id\` の追加ファイルを新規作成&quot;">​</a></h3><hr><p>もし次に進むタスクを一緒にコード化していきたいなら、どれから始めましょうか？<br> 商品更新エンドポイント（PUT）？ カート機能？</p>`,42)]))}const c=s(l,[["render",n]]);export{o as __pageData,c as default};
