import{_ as i,c as a,o as t,ae as n}from"./chunks/framework.Bt0T77vy.js";const F=JSON.parse('{"title":"✅ Next.js に Tailwind CSS をインストール・セットアップする方法","description":"","frontmatter":{},"headers":[],"relativePath":"posts/css.md","filePath":"posts/css.md"}'),l={name:"posts/css.md"};function h(e,s,k,p,d,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="✅-next-js-に-tailwind-css-をインストール・セットアップする方法" tabindex="-1">✅ Next.js に Tailwind CSS をインストール・セットアップする方法 <a class="header-anchor" href="#✅-next-js-に-tailwind-css-をインストール・セットアップする方法" aria-label="Permalink to &quot;✅ Next.js に Tailwind CSS をインストール・セットアップする方法&quot;">​</a></h1><h3 id="_1-tailwind-css-をインストール" tabindex="-1">① Tailwind CSS をインストール <a class="header-anchor" href="#_1-tailwind-css-をインストール" aria-label="Permalink to &quot;① Tailwind CSS をインストール&quot;">​</a></h3><p>プロジェクトの（<code>frontend/</code>）で、ターミナルを開き、次を実行してください。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> tailwindcss</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> postcss</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> autoprefixer</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --save-dev</span></span></code></pre></div><p>次は frontend/の配下に下記ファイルを手動で作成します：</p><ul><li><code>tailwind.config.mjs</code></li><li><code>postcss.config.mjs</code></li></ul><hr><h3 id="_2-tailwind-config-mjs-を作成" tabindex="-1">② <code>tailwind.config.mjs</code> を作成 <a class="header-anchor" href="#_2-tailwind-config-mjs-を作成" aria-label="Permalink to &quot;② \`tailwind.config.mjs\` を作成&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">/** </span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">@</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#C792EA;--shiki-dark-font-style:italic;">type</span><span style="--shiki-light:#6F42C1;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> {</span><span style="--shiki-light:#6F42C1;--shiki-light-font-style:inherit;--shiki-dark:#FFCB6B;--shiki-dark-font-style:italic;">import(&#39;tailwindcss&#39;).Config</span><span style="--shiki-light:#6F42C1;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">}</span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> config</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">  content</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">./app/**/*.{js,ts,jsx,tsx,mdx}</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">./components/**/*.{js,ts,jsx,tsx,mdx}</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">    // 他のファイルパスがあれば追加</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">  ]</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">  theme</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">    extend</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">  plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> []</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> config</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><h3 id="_2-既存のpostcss-config-mjs-を編集" tabindex="-1">② 既存の<code>postcss.config.mjs</code> を編集 <a class="header-anchor" href="#_2-既存のpostcss-config-mjs-を編集" aria-label="Permalink to &quot;② 既存の\`postcss.config.mjs\` を編集&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">  plugins</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#F07178;">@tailwindcss/postcss</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">    autoprefixer</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">};</span></span></code></pre></div><p>👉 これで、<code>app/</code> と <code>components/</code> 以下のファイルで Tailwind が有効になります。</p><hr><h3 id="_3-グローバル-css-ファイルを作る" tabindex="-1">③ グローバル CSS ファイルを作る <a class="header-anchor" href="#_3-グローバル-css-ファイルを作る" aria-label="Permalink to &quot;③ グローバル CSS ファイルを作る&quot;">​</a></h3><p><code>frontend/styles/</code>ディレクトリに、<code>globals.css</code>というファイルを作成してください。</p><p>ファイル内容はこれです：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">@tailwind</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> base</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">@tailwind</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> components</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">@tailwind</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> utilities</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><hr><h3 id="_4-app-tsx-または-layout-tsx-に読み込む" tabindex="-1">④ <code>_app.tsx</code> または <code>layout.tsx</code> に読み込む <a class="header-anchor" href="#_4-app-tsx-または-layout-tsx-に読み込む" aria-label="Permalink to &quot;④ \`_app.tsx\` または \`layout.tsx\` に読み込む&quot;">​</a></h3><p>次に、<code>app/layout.tsx</code> を編集して、さっき作った <code>globals.css</code> をインポートします！</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">../styles/globals.css</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"> // ← これを必ず追加する！</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> RootLayout</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">({</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-light-font-style:inherit;--shiki-dark:#EEFFFF;--shiki-dark-font-style:italic;">  children</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#F07178;">  children</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> React</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">ReactNode</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">})</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#F07178;">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#C792EA;"> lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">ja</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#F07178;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">&gt;{</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">children</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#F07178;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#F07178;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">  )</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><hr><h1 id="🎯-ここまでで-tailwind-完了" tabindex="-1">🎯 ここまでで Tailwind 完了！ <a class="header-anchor" href="#🎯-ここまでで-tailwind-完了" aria-label="Permalink to &quot;🎯 ここまでで Tailwind 完了！&quot;">​</a></h1><p>これで、</p><ul><li><code>text-3xl</code></li><li><code>bg-blue-600</code></li><li><code>rounded-lg</code></li><li><code>hover:bg-blue-700</code> とか、全部きれいに反映されるようになります ✨</li></ul><hr><p>要約すると：</p><table tabindex="0"><thead><tr><th style="text-align:left;">作業</th><th style="text-align:left;">やること</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;"><code>npm install -D tailwindcss postcss autoprefixer</code></td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;"><code>tailwind.config.mjs</code> を新規作成</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;"><code>postcss.config.mjs</code>を編集</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;"><code>globals.css</code>を作成して Tailwind ディレクティブを書く</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;"><code>layout.tsx</code>で <code>import &#39;../styles/globals.css&#39;</code></td></tr></tbody></table><hr>`,29)]))}const c=i(l,[["render",h]]);export{F as __pageData,c as default};
