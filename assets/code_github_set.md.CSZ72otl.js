import{_ as i,c as a,o as n,ae as t}from"./chunks/framework.4ukD4ZLJ.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"code/github_set.md","filePath":"code/github_set.md"}'),e={name:"code/github_set.md"};function l(h,s,p,r,k,o){return n(),a("div",null,s[0]||(s[0]=[t(`<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span>…or create a new repository on the command line</span></span>
<span class="line"><span>echo &quot;# ship-ship&quot; &gt;&gt; README.md</span></span>
<span class="line"><span>git init</span></span>
<span class="line"><span>git add README.md</span></span>
<span class="line"><span>git commit -m &quot;first commit&quot;</span></span>
<span class="line"><span>git branch -M main</span></span>
<span class="line"><span>git remote add origin https://github.com/kaikyou76/ship-ship.git</span></span>
<span class="line"><span>git push -u origin main</span></span>
<span class="line"><span>…or push an existing repository from the command line</span></span>
<span class="line"><span>git remote add origin https://github.com/kaikyou76/ship-ship.git</span></span>
<span class="line"><span>git branch -M main</span></span>
<span class="line"><span>git push -u origin main</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span>…or push an existing repository from the command line</span></span>
<span class="line"><span>git remote add origin https://github.com/kaikyou76/ship-ship.git</span></span>
<span class="line"><span>git branch -M main</span></span>
<span class="line"><span>git push -u origin main</span></span></code></pre></div><p>Windows 環境で <strong><code>ship-ship</code> 単一リポジトリ内で <code>frontend</code>（Next.js）と <code>backend</code>（Cloudflare Workers）を管理</strong> しつつ、<strong>Vercel にフロントエンドのみをデプロイ</strong> する構成の手順を説明します。</p><hr><h2 id="📂-ディレクトリ構造-目標" tabindex="-1">📂 ディレクトリ構造（目標） <a class="header-anchor" href="#📂-ディレクトリ構造-目標" aria-label="Permalink to &quot;📂 ディレクトリ構造（目標）&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span>ship-ship/</span></span>
<span class="line"><span>├── frontend/      # Next.jsプロジェクト（Vercelでデプロイ）</span></span>
<span class="line"><span>│   ├── app/</span></span>
<span class="line"><span>│   ├── package.json</span></span>
<span class="line"><span>│   └── vercel.json  # Vercel設定</span></span>
<span class="line"><span>├── backend/       # Cloudflare Workersプロジェクト</span></span>
<span class="line"><span>│   ├── src/</span></span>
<span class="line"><span>│   └── package.json</span></span>
<span class="line"><span>└── .git/          # 単一リポジトリ</span></span></code></pre></div><hr><h2 id="🛠️-手順-windows-対応" tabindex="-1">🛠️ 手順（Windows 対応） <a class="header-anchor" href="#🛠️-手順-windows-対応" aria-label="Permalink to &quot;🛠️ 手順（Windows 対応）&quot;">​</a></h2><h3 id="_1-リポジトリの初期化" tabindex="-1">1. <strong>リポジトリの初期化</strong> <a class="header-anchor" href="#_1-リポジトリの初期化" aria-label="Permalink to &quot;1. **リポジトリの初期化**&quot;">​</a></h3><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"># ship-ship ディレクトリに移動</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">cd path\\to\\ship</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">ship</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"># Git初期化（既存の.gitがある場合は削除）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">rm </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">force .git</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">git init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"># 全ファイルをステージング</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">git add .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"># 初期コミット</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">git commit </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">m </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">初期コミット</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span></code></pre></div><h3 id="_2-github-リポジトリと接続" tabindex="-1">2. <strong>GitHub リポジトリと接続</strong> <a class="header-anchor" href="#_2-github-リポジトリと接続" aria-label="Permalink to &quot;2. **GitHub リポジトリと接続**&quot;">​</a></h3><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"># リモートリポジトリを追加</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">git remote add origin https:</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">//</span><span style="--shiki-light:#005CC5;--shiki-dark:#82AAFF;">github.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">kaikyou76</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">ship</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">ship.git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"># メインブランチを設定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">git branch </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">M main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"># プッシュ（強制プッシュが必要な場合）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">git push </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">u </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-f</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> origin main</span></span></code></pre></div><hr><h3 id="_3-vercel-向け設定-フロントエンドのみデプロイ" tabindex="-1">3. <strong>Vercel 向け設定（フロントエンドのみデプロイ）</strong> <a class="header-anchor" href="#_3-vercel-向け設定-フロントエンドのみデプロイ" aria-label="Permalink to &quot;3. **Vercel 向け設定（フロントエンドのみデプロイ）**&quot;">​</a></h3><p><a href="/small_ship/coment/vercel_json.html">設定説明</a></p><h4 id="frontend-vercel-json-を作成" tabindex="-1"><code>frontend/vercel.json</code> を作成 <a class="header-anchor" href="#frontend-vercel-json-を作成" aria-label="Permalink to &quot;\`frontend/vercel.json\` を作成&quot;">​</a></h4><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C792EA;">version</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C792EA;">builds</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#FFCB6B;">src</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">package.json</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#FFCB6B;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">@vercel/next</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C792EA;">routes</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#FFCB6B;">src</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">/(.*)</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#FFCB6B;">dest</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">/$1</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><h4 id="vercel-でプロジェクトをインポート" tabindex="-1">Vercel でプロジェクトをインポート <a class="header-anchor" href="#vercel-でプロジェクトをインポート" aria-label="Permalink to &quot;Vercel でプロジェクトをインポート&quot;">​</a></h4><ol><li><a href="https://vercel.com/" target="_blank" rel="noreferrer">Vercel ダッシュボード</a> にログイン</li><li><strong>「Add New」→「Project」</strong> を選択</li></ol><hr><h2 id="🚀-vercel-デプロイ続きの手順" tabindex="-1">🚀 <strong>Vercel デプロイ続きの手順</strong> <a class="header-anchor" href="#🚀-vercel-デプロイ続きの手順" aria-label="Permalink to &quot;🚀 **Vercel デプロイ続きの手順**&quot;">​</a></h2><h3 id="_4-vercel-プロジェクト設定画面の詳細" tabindex="-1">4. <strong>Vercel プロジェクト設定画面の詳細</strong> <a class="header-anchor" href="#_4-vercel-プロジェクト設定画面の詳細" aria-label="Permalink to &quot;4. **Vercel プロジェクト設定画面の詳細**&quot;">​</a></h3><ol><li><p><strong>「Import Project」画面</strong> で以下を設定:</p><ul><li><strong>GitHub リポジトリ</strong>: <code>ship-ship</code> リポジトリを選択</li><li><strong>Project Name</strong>: 自動入力されます（必要に応じて変更可）</li><li><strong>Root Directory</strong>: <code>frontend</code> に手動で変更 （※ <strong>「frontend」と直接入力</strong> する必要があります）</li></ul></li><li><p><strong>「Framework Preset」</strong></p><ul><li>Next.js が自動検出されるはずです。されない場合は手動で選択。</li></ul></li><li><p><strong>Environment Variables (環境変数)</strong></p><ul><li>フロントエンドで必要な環境変数（例: <code>NEXT_PUBLIC_API_URL</code>）がある場合、ここで追加。</li></ul></li></ol><hr><h3 id="_5-「deploy」ボタンをクリック" tabindex="-1">5. <strong>「Deploy」ボタンをクリック</strong> <a class="header-anchor" href="#_5-「deploy」ボタンをクリック" aria-label="Permalink to &quot;5. **「Deploy」ボタンをクリック**&quot;">​</a></h3><ul><li>Vercel が自動で以下を実行: <ol><li><code>frontend/package.json</code> を検出</li><li><code>npm install</code> → <code>npm run build</code> を実行</li><li>デプロイ完了後、<strong>本番 URL が発行</strong>されます（例: <code>https://ship-ship.vercel.app</code>）</li></ol></li></ul><hr><h3 id="_6-デプロイ後の確認" tabindex="-1">6. <strong>デプロイ後の確認</strong> <a class="header-anchor" href="#_6-デプロイ後の確認" aria-label="Permalink to &quot;6. **デプロイ後の確認**&quot;">​</a></h3><h4 id="✅-正常にデプロイされたかチェック" tabindex="-1">✅ 正常にデプロイされたかチェック: <a class="header-anchor" href="#✅-正常にデプロイされたかチェック" aria-label="Permalink to &quot;✅ 正常にデプロイされたかチェック:&quot;">​</a></h4><ol><li>Vercel ダッシュボードで <strong>「Logs」タブ</strong> を開き、エラーがないか確認。</li><li>発行された URL にアクセスし、Next.js アプリが表示されるかテスト。</li></ol><h4 id="🔧-もし失敗する場合" tabindex="-1">🔧 もし失敗する場合: <a class="header-anchor" href="#🔧-もし失敗する場合" aria-label="Permalink to &quot;🔧 もし失敗する場合:&quot;">​</a></h4><ul><li><strong>よくある原因と解決策</strong>: <ul><li><strong><code>Root Directory</code> の指定ミス</strong> → プロジェクト設定で <code>frontend</code> に再度確認。</li><li><strong>ビルドコマンドの不足</strong> → <code>frontend/package.json</code> に <code>&quot;build&quot;: &quot;next build&quot;</code> があるか確認。</li><li><strong>環境変数の未設定</strong> → Vercel の「Settings」→「Environment Variables」で追加。</li></ul></li></ul><hr><h2 id="⚙️-補足-今後の開発フロー" tabindex="-1">⚙️ <strong>補足: 今後の開発フロー</strong> <a class="header-anchor" href="#⚙️-補足-今後の開発フロー" aria-label="Permalink to &quot;⚙️ **補足: 今後の開発フロー**&quot;">​</a></h2><h3 id="フロントエンドを更新する場合" tabindex="-1">フロントエンドを更新する場合 <a class="header-anchor" href="#フロントエンドを更新する場合" aria-label="Permalink to &quot;フロントエンドを更新する場合&quot;">​</a></h3><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"># frontend ディレクトリで変更を加え、Gitにプッシュ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">cd path\\to\\ship</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">ship\\frontend</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">git add .</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">git commit </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">m </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">Update frontend</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">git push origin main</span></span></code></pre></div><p>→ Vercel が自動で<strong>再デプロイ</strong>を開始します（GitHub 連携時）。</p><h3 id="バックエンドを更新する場合" tabindex="-1">バックエンドを更新する場合 <a class="header-anchor" href="#バックエンドを更新する場合" aria-label="Permalink to &quot;バックエンドを更新する場合&quot;">​</a></h3><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"># backend ディレクトリで変更を加え、プッシュ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">cd path\\to\\ship</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">ship\\backend</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">git add .</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">git commit </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">m </span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">Update backend</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">git push origin main</span></span></code></pre></div><p>→ Cloudflare Workers 側で別途デプロイが必要です。</p><hr><h2 id="📌-重要ポイント" tabindex="-1">📌 <strong>重要ポイント</strong> <a class="header-anchor" href="#📌-重要ポイント" aria-label="Permalink to &quot;📌 **重要ポイント**&quot;">​</a></h2><ul><li><strong>Vercel は <code>frontend</code> ディレクトリのみを監視</strong>するため、<code>backend</code> の変更は影響しません。</li><li>フロントエンドからバックエンドに API リクエストを送る場合、<strong>CORS 設定</strong>が必要になることがあります（Cloudflare Workers 側で対応）。</li></ul><p>これで <strong>Vercel へのデプロイが完了</strong> します！ もしエラーが発生した場合は、具体的なエラーメッセージを教えてください。</p>`,44)]))}const g=i(e,[["render",l]]);export{c as __pageData,g as default};
