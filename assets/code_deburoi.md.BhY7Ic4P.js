import{_ as i,c as a,o as t,ae as e}from"./chunks/framework.Bt0T77vy.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"code/deburoi.md","filePath":"code/deburoi.md"}'),l={name:"code/deburoi.md"};function n(h,s,p,k,r,o){return t(),a("div",null,s[0]||(s[0]=[e(`<p><code>kaikyou-shop</code> プロジェクトを <strong>Cloudflare Workers</strong> にデプロイする流れについて、フロントエンド（Next.js）とバックエンド（Cloudflare Workers）両方のセットアップからデプロイまでを順を追って説明します。</p><h3 id="_1-フロントエンド-next-js-のビルドとデプロイ" tabindex="-1">1. <strong>フロントエンド（Next.js）のビルドとデプロイ</strong> <a class="header-anchor" href="#_1-フロントエンド-next-js-のビルドとデプロイ" aria-label="Permalink to &quot;1. **フロントエンド（Next.js）のビルドとデプロイ**&quot;">​</a></h3><p>フロントエンドは Next.js で構築されています。これをデプロイするには、Vercel や Netlify、もしくは任意のサーバーにデプロイできます。Vercel にデプロイする場合を例にとって説明します。</p><h4 id="_1-1-フロントエンドのビルド" tabindex="-1">1.1 <strong>フロントエンドのビルド</strong> <a class="header-anchor" href="#_1-1-フロントエンドのビルド" aria-label="Permalink to &quot;1.1 **フロントエンドのビルド**&quot;">​</a></h4><p>フロントエンドをビルドして、デプロイ準備を整えます。以下のコマンドを実行して、Next.js プロジェクトをビルドします。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#82AAFF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> frontend</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> build</span></span></code></pre></div><p>これにより、<code>out/</code> フォルダが生成され、Next.js アプリが本番環境用に最適化されます。</p><h4 id="_1-2-vercel-へのデプロイ" tabindex="-1">1.2 <strong>Vercel へのデプロイ</strong> <a class="header-anchor" href="#_1-2-vercel-へのデプロイ" aria-label="Permalink to &quot;1.2 **Vercel へのデプロイ**&quot;">​</a></h4><p>Vercel でのデプロイは非常に簡単です。以下の手順でデプロイを行います。</p><ol><li><a href="https://vercel.com" target="_blank" rel="noreferrer">Vercel</a> にサインインし、ダッシュボードから新しいプロジェクトを作成します。</li><li>GitHub や GitLab のリポジトリをリンクします。</li><li>プロジェクトを Vercel にデプロイします。</li></ol><p>Vercel にリンクされた Git リポジトリが自動的にビルドされ、デプロイされます。ビルドの後、フロントエンドが本番環境に公開されます。</p><hr><h3 id="_2-バックエンド-cloudflare-workers-のデプロイ" tabindex="-1">2. <strong>バックエンド（Cloudflare Workers）のデプロイ</strong> <a class="header-anchor" href="#_2-バックエンド-cloudflare-workers-のデプロイ" aria-label="Permalink to &quot;2. **バックエンド（Cloudflare Workers）のデプロイ**&quot;">​</a></h3><p>バックエンド部分は Cloudflare Workers にデプロイされます。<code>backend/</code> フォルダにあるコードを Cloudflare Workers にデプロイする手順を見ていきます。</p><h3 id="💡-前提-cloudflare-のログインと認証が済んでいること" tabindex="-1">💡 前提：Cloudflare のログインと認証が済んでいること <a class="header-anchor" href="#💡-前提-cloudflare-のログインと認証が済んでいること" aria-label="Permalink to &quot;💡 前提：Cloudflare のログインと認証が済んでいること&quot;">​</a></h3><h4 id="_2-1-cloudflare-workers-の設定" tabindex="-1">2.1 <strong>Cloudflare Workers の設定</strong> <a class="header-anchor" href="#_2-1-cloudflare-workers-の設定" aria-label="Permalink to &quot;2.1 **Cloudflare Workers の設定**&quot;">​</a></h4><p>バックエンドで使う <code>wrangler.jsonc</code> が必要です。<code>backend/wrangler.jsonc</code> に以下のような設定がされているはずです。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C792EA;">name</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">kaikyou-shop</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C792EA;">type</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">javascript</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"> // または &quot;typescript&quot; に変更する</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C792EA;">account_id</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">YOUR_ACCOUNT_ID</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"> // Cloudflare のダッシュボードで確認</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C792EA;">workers_dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"> // 本番環境デプロイ時には false に設定</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C792EA;">compatibility_date</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">2025-05-04</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"> // 本番環境に合わせた日付を設定</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C792EA;">env</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#FFCB6B;">production</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">route</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">https://your-shop.com/*</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"> // 本番環境の URL</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">zone_id</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">YOUR_ZONE_ID</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"> // Cloudflare のゾーン ID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>ここで重要な部分は 独自ドメインの場合、<code>account_id</code> と <code>zone_id</code> は必要となります。これらは Cloudflare のダッシュボードから取得できます。</p><h4 id="_2-2-cloudflare-workers-へデプロイ" tabindex="-1">2.2 <strong>Cloudflare Workers へデプロイ</strong> <a class="header-anchor" href="#_2-2-cloudflare-workers-へデプロイ" aria-label="Permalink to &quot;2.2 **Cloudflare Workers へデプロイ**&quot;">​</a></h4><p>まず一度だけログインが必要：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">wrangler</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> login</span></span></code></pre></div><p><strong>理由：</strong> Cloudflare アカウントと <code>wrangler</code> CLI を紐づけ、本番環境にデプロイする権限を得るため。</p><hr><h3 id="_1-任意-本番環境でのビルド確認" tabindex="-1">① （任意）本番環境でのビルド確認： <a class="header-anchor" href="#_1-任意-本番環境でのビルド確認" aria-label="Permalink to &quot;① （任意）本番環境でのビルド確認：&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">wrangler</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> deploy</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --env</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> production</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --dry-run</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --outdir=dist</span></span></code></pre></div><p><strong>目的：</strong> 本番設定でビルドと設定の整合性を事前検証。ファイルは <code>dist/</code> に出力され、エラーがあればここで分かります。</p><ul><li><code>--dry-run</code>: 実際のデプロイはしない。</li><li><code>--env production</code>: <code>wrangler.jsonc</code> の <code>env.production</code> を使って検証。</li><li><code>--outdir=dist</code>: 結果をローカルに保存。</li></ul><hr><h3 id="_2-本番へ実際にデプロイ" tabindex="-1">② 本番へ実際にデプロイ： <a class="header-anchor" href="#_2-本番へ実際にデプロイ" aria-label="Permalink to &quot;② 本番へ実際にデプロイ：&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">wrangler</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> deploy</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --env</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> production</span></span></code></pre></div><p><strong>理由：</strong> <code>--env production</code> 付きで初めて、本番用環境変数（例：<code>JWT_SECRET</code>）・R2 バケット・D1 DB を使用してデプロイされます。</p><hr><h2 id="🔁-まとめ-おすすめの流れ" tabindex="-1">🔁 まとめ：おすすめの流れ <a class="header-anchor" href="#🔁-まとめ-おすすめの流れ" aria-label="Permalink to &quot;🔁 まとめ：おすすめの流れ&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#82AAFF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> backend</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"># 1. Cloudflare にログイン（初回のみ）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">wrangler</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> login</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"># 2. 本番環境で dry-run ビルド（任意）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">wrangler</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> deploy</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --env</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> production</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --dry-run</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --outdir=dist</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"># 3. 本番にデプロイ</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">wrangler</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> deploy</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --env</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> production</span></span></code></pre></div><p>これにより、バックエンドが本番環境にデプロイされます。</p><blockquote><p>✅ <code>wrangler publish</code> は <code>deploy</code> の旧名です（今は <code>deploy</code> が推奨されます）。</p></blockquote><hr><h4 id="_2-4-バックエンドの確認" tabindex="-1">2.4 <strong>バックエンドの確認</strong> <a class="header-anchor" href="#_2-4-バックエンドの確認" aria-label="Permalink to &quot;2.4 **バックエンドの確認**&quot;">​</a></h4><p>デプロイ後、以下のコマンドで Cloudflare Workers のログをリアルタイムで確認できます。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">wrangler</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --env</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> production</span></span></code></pre></div><p>これにより、実際にバックエンドが正しく動作しているかどうかを確認できます。</p><hr><h3 id="_3-フロントエンドとバックエンドの連携" tabindex="-1">3. <strong>フロントエンドとバックエンドの連携</strong> <a class="header-anchor" href="#_3-フロントエンドとバックエンドの連携" aria-label="Permalink to &quot;3. **フロントエンドとバックエンドの連携**&quot;">​</a></h3><p>フロントエンドとバックエンドを連携させるために、フロントエンドの環境変数（<code>.env.local</code>）にバックエンド API の URL を設定します。例えば、<code>NEXT_PUBLIC_API_URL</code> を設定して、バックエンドの API を参照するようにします。</p><div class="language-env vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">env</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span># frontend/.env.local</span></span>
<span class="line"><span>NEXT_PUBLIC_API_URL=https://your-cloudflare-worker-url.com/api</span></span></code></pre></div><p>これにより、フロントエンドのコードはバックエンド API にリクエストを送信できるようになります。</p><hr><h3 id="_4-デプロイ後の確認" tabindex="-1">4. <strong>デプロイ後の確認</strong> <a class="header-anchor" href="#_4-デプロイ後の確認" aria-label="Permalink to &quot;4. **デプロイ後の確認**&quot;">​</a></h3><ul><li><strong>フロントエンド</strong>: Vercel などで公開された URL にアクセスして、アプリが正常に表示されるか確認します。</li><li><strong>バックエンド</strong>: Cloudflare Workers の URL（例えば <code>https://your-cloudflare-worker-url.com</code>）にアクセスして、API が正しく動作するか確認します。</li></ul><hr><h3 id="_5-git-リポジトリにコードをプッシュ" tabindex="-1">5. <strong>Git リポジトリにコードをプッシュ</strong> <a class="header-anchor" href="#_5-git-リポジトリにコードをプッシュ" aria-label="Permalink to &quot;5. **Git リポジトリにコードをプッシュ**&quot;">​</a></h3><p>もし Git リポジトリを使用している場合、フロントエンドとバックエンド両方の変更をコミットし、リモートリポジトリにプッシュします。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">Deploy to production</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> main</span></span></code></pre></div><p>これにより、コードが Git リポジトリにプッシュされ、CI/CD パイプラインで自動的にデプロイされる場合もあります。</p><hr><p>これで、<code>kaikyou-shop</code> のフロントエンドとバックエンドの両方を本番環境にデプロイする準備が整いました！</p>`,57)]))}const g=i(l,[["render",n]]);export{c as __pageData,g as default};
