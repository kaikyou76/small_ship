import{_ as i,c as a,o as t,ae as n}from"./chunks/framework.Bt0T77vy.js";const h="/kaikyou-vitepress/assets/image.DblcKSeI.png",g=JSON.parse('{"title":"Hello World","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),l={name:"index.md"};function k(e,s,p,r,d,F){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="hello-world" tabindex="-1">Hello World <a class="header-anchor" href="#hello-world" aria-label="Permalink to &quot;Hello World&quot;">​</a></h1><p>分割線 ├────────</p><p>┌──────</p><p>──┴─────</p><p>────────────┘</p><p>────────┤</p><p>frontend@0.1.0 D:\\next-projects\\kaikyou-shop\\frontend └─┬ frontend@0.1.0 -&gt; .<br> └── frontend@0.1.0 deduped -&gt; .\\</p><p>⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯</p><p>各アイコン ⛅️♥️🌀💪💦🎧🙇🚣🔁🎯🍪▼👇❗✍️📁🚀🔥⚠️🌐🚨🙌🛡️🌟🏆🧩 🔚💬🔜📌👑 ❓✨❌🥇🥈🥉🛠📊⚙️ 🧪🧠🔧✔✅🚫🔍🧭 🧱</p><ul><li>フロントエンドキャッシュクリア</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> cache</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> clean</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --force</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">Remove-Item</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> -Recurse</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> -Force</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> node_modules,</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> package-lock.json,</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> .next</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> install</span></span></code></pre></div><ul><li>データベース操作</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> //ローカル</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> npx</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> wrangler</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> d1</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> execute</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> shopping-db</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --local</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --command</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">SELECT * FROM users;</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> //本番</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> npx</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> wrangler</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> d1</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> execute</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> shopping-db</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> --command</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">SELECT * FROM users;</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span></code></pre></div><ul><li>疎通テスト</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">curl.exe</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> OPTIONS</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> http://localhost:3000/api/products</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">Origin: http://localhost:3000</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">Access-Control-Request-Method: GET</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> -I</span></span></code></pre></div><p>それはとても合理的な判断です。Vitest はユニットテストや簡易な統合テストには便利ですが、<strong>Cloudflare Workers + D1 + JWT + セッション管理 + 認証フロー</strong>のような本番さながらのシナリオになると、テスト環境の制約（Node.js 互換性の欠如など）で限界があります。</p><hr><p>了解しました。まずバックエンド API のテストから始めましょう。以下に、<strong>バックエンド API の完全なテスト手順</strong>を詳細に説明します。</p><hr><h3 id="バックエンド-api-テスト手順-postman-または-curl-使用" tabindex="-1"><strong>バックエンド API テスト手順</strong> (Postman または cURL 使用) <a class="header-anchor" href="#バックエンド-api-テスト手順-postman-または-curl-使用" aria-label="Permalink to &quot;**バックエンド API テスト手順** (Postman または cURL 使用)&quot;">​</a></h3><h4 id="_1-ログイン-api-のテスト" tabindex="-1"><strong>1. ログイン API のテスト</strong> <a class="header-anchor" href="#_1-ログイン-api-のテスト" aria-label="Permalink to &quot;**1. ログイン API のテスト**&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> POST</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">  http://localhost:3000/api/login</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">Content-Type: application/json</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;">  -d</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">{&quot;email&quot;:&quot;user@example.com&quot;,&quot;password&quot;:&quot;yourpassword&quot;}</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&#39;</span></span></code></pre></div><p><strong>期待される正常レスポンス:</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C792EA;">data</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#FFCB6B;">token</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#FFCB6B;">user</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">id</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">name</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">Test User</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">email</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">user@example.com</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">      &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;">role</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">user</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p><strong>異常系テストケース:</strong></p><ul><li>パスワード誤り → <code>401 Unauthorized</code></li><li>存在しないユーザー → <code>404 Not Found</code></li><li>リクエスト形式不正 → <code>400 Bad Request</code></li></ul><hr><h4 id="_2-認証状態チェック-api-のテスト" tabindex="-1"><strong>2. 認証状態チェック API のテスト</strong> <a class="header-anchor" href="#_2-認証状態チェック-api-のテスト" aria-label="Permalink to &quot;**2. 認証状態チェック API のテスト**&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> GET</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">  http://localhost:3000/api/users/me</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span></code></pre></div><p><strong>期待される正常レスポンス:</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C792EA;">data</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#FFCB6B;">id</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#FFCB6B;">name</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">Test User</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#FFCB6B;">email</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">user@example.com</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#FFCB6B;">role</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">user</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p><strong>異常系テストケース:</strong></p><ul><li>トークン未指定 → <code>401 Unauthorized</code></li><li>無効なトークン → <code>403 Forbidden</code></li></ul><hr><h4 id="_3-ログアウト-api-のテスト" tabindex="-1"><strong>3. ログアウト API のテスト</strong> <a class="header-anchor" href="#_3-ログアウト-api-のテスト" aria-label="Permalink to &quot;**3. ログアウト API のテスト**&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> POST</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">  http://localhost:3000/api/logout</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#C3E88D;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span></code></pre></div><p><strong>期待される正常レスポンス:</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">  &quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#C792EA;">message</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">Logged out successfully</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><hr><h3 id="テスト結果の検証ポイント" tabindex="-1"><strong>テスト結果の検証ポイント</strong> <a class="header-anchor" href="#テスト結果の検証ポイント" aria-label="Permalink to &quot;**テスト結果の検証ポイント**&quot;">​</a></h3><table tabindex="0"><thead><tr><th>テスト項目</th><th>期待結果</th><th>実際の結果</th><th>問題箇所</th></tr></thead><tbody><tr><td>ログイン成功</td><td>200 OK + token</td><td>✅/❌</td><td><code>loginHandler</code></td></tr><tr><td>ログイン失敗 (認証エラー)</td><td>401 Unauthorized</td><td>✅/❌</td><td><code>verifyPassword</code></td></tr><tr><td>ユーザー情報取得</td><td>200 OK + user データ</td><td>✅/❌</td><td>DB クエリ</td></tr><tr><td>無効トークンでのアクセス</td><td>403 Forbidden</td><td>✅/❌</td><td>JWT 検証</td></tr><tr><td>ログアウト処理</td><td>200 OK</td><td>✅/❌</td><td>セッション管理</td></tr></tbody></table><hr><h3 id="バックエンド側で確認すべき核心部分" tabindex="-1"><strong>バックエンド側で確認すべき核心部分</strong> <a class="header-anchor" href="#バックエンド側で確認すべき核心部分" aria-label="Permalink to &quot;**バックエンド側で確認すべき核心部分**&quot;">​</a></h3><h4 id="_1-ログイン処理-loginhandler" tabindex="-1"><strong>1. ログイン処理 (<code>loginHandler</code>)</strong> <a class="header-anchor" href="#_1-ログイン処理-loginhandler" aria-label="Permalink to &quot;**1. ログイン処理 (\`loginHandler\`)**&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">// パスワード検証部分</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> isValid</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> verifyPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">(password</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> user</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">password_hash)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">isValid) </span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">Invalid credentials</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> },</span><span style="--shiki-light:#005CC5;--shiki-dark:#F78C6C;"> 401</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">// トークン生成部分</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> token</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> generateAuthToken</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">(c</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> user</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> user</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">email)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><h4 id="_2-トークン検証ミドルウェア" tabindex="-1"><strong>2. トークン検証ミドルウェア</strong> <a class="header-anchor" href="#_2-トークン検証ミドルウェア" aria-label="Permalink to &quot;**2. トークン検証ミドルウェア**&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">// 例: JWT検証ロジック</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#EEFFFF;"> verifyToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#E36209;--shiki-light-font-style:inherit;--shiki-dark:#EEFFFF;--shiki-dark-font-style:italic;">token</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#FFCB6B;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> jwt</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">verify</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">token</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> env</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;">JWT_SECRET</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">  }</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> catch</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">) </span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#89DDFF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">};</span></span></code></pre></div><hr><h3 id="問題が発見された場合の対処法" tabindex="-1"><strong>問題が発見された場合の対処法</strong> <a class="header-anchor" href="#問題が発見された場合の対処法" aria-label="Permalink to &quot;**問題が発見された場合の対処法**&quot;">​</a></h3><ol><li><p><strong>トークンが生成されない場合</strong></p><ul><li>JWT ライブラリの設定を確認</li><li>シークレットキーが環境変数に正しく設定されているか確認</li></ul></li><li><p><strong>パスワード検証が失敗する場合</strong></p><ul><li>ハッシュ化アルゴリズムの一致を確認 (例: bcrypt)</li><li>DB に保存されているパスワードハッシュを直接確認</li></ul></li><li><p><strong>CORS エラーが発生する場合</strong></p><ul><li>バックエンドで適切な CORS ヘッダーを設定</li></ul><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">// 例: HonoでのCORS設定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">/*</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> cors</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">())</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span></code></pre></div></li></ol><hr><h3 id="フロントエンド接続前の最終確認" tabindex="-1"><strong>フロントエンド接続前の最終確認</strong> <a class="header-anchor" href="#フロントエンド接続前の最終確認" aria-label="Permalink to &quot;**フロントエンド接続前の最終確認**&quot;">​</a></h3><ol><li><p><strong>Postman コレクションの作成</strong></p><ul><li>ログイン → ユーザー情報取得 → ログアウトの流れをテスト</li></ul></li><li><p><strong>環境変数の確認</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"># .envファイルの例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">JWT_SECRET</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">your_strong_secret_here</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">DATABASE_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">file:./dev.db</span></span></code></pre></div></li><li><p><strong>DB の直接確認</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">-- ユーザーテーブルの内容確認</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> id, email, password_hash </span><span style="--shiki-light:#D73A49;--shiki-dark:#F78C6C;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> users;</span></span></code></pre></div></li></ol><hr><p>このテストプロセスで<strong>バックエンドの問題を確実に排除</strong>してから、フロントエンドの実装に進んでください。テスト結果を共有いただければ、具体的な問題解決をお手伝いします。</p><h2 id="✅-next-js-cloudflare-workers-本番動作確認のすすめ方" tabindex="-1">✅ Next.js + Cloudflare Workers 本番動作確認のすすめ方 <a class="header-anchor" href="#✅-next-js-cloudflare-workers-本番動作確認のすすめ方" aria-label="Permalink to &quot;✅ Next.js + Cloudflare Workers 本番動作確認のすすめ方&quot;">​</a></h2><p>本番環境での確認を進める場合、以下のステップで実装と動作検証を行うとスムーズです：</p><hr><h3 id="🔹-1-post-api-register-をフロントから打鍵する準備" tabindex="-1">🔹 1. <code>POST /api/register</code> をフロントから打鍵する準備 <a class="header-anchor" href="#🔹-1-post-api-register-をフロントから打鍵する準備" aria-label="Permalink to &quot;🔹 1. \`POST /api/register\` をフロントから打鍵する準備&quot;">​</a></h3><p>Next.js 側のフロントエンドに以下のようなユーザー登録フォームを用意します：</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">// components/RegisterForm.tsx</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">use client</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">react</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> RegisterForm</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;">email</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> setEmail</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;">password</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> setPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">  async</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> handleSubmit</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E36209;--shiki-light-font-style:inherit;--shiki-dark:#EEFFFF;--shiki-dark-font-style:italic;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> React</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">FormEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">    e</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">preventDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">/api/register</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">      method</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">POST</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">      headers</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#F07178;">Content-Type</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">application/json</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">      body</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> email</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> password</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">    }</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> res</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">登録結果:</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> data</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#F07178;">form</span><span style="--shiki-light:#6F42C1;--shiki-dark:#C792EA;"> onSubmit</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">handleSubmit</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#F07178;">input</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#C792EA;">        type</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">email</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#C792EA;">        value</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">email</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#C792EA;">        onChange</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{(</span><span style="--shiki-light:#E36209;--shiki-light-font-style:inherit;--shiki-dark:#EEFFFF;--shiki-dark-font-style:italic;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> =&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> setEmail</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">(e</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">value)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#C792EA;">        placeholder</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">メールアドレス</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#C792EA;">        required</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">      /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#F07178;">input</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#C792EA;">        type</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">password</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#C792EA;">        value</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">password</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#C792EA;">        onChange</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{(</span><span style="--shiki-light:#E36209;--shiki-light-font-style:inherit;--shiki-dark:#EEFFFF;--shiki-dark-font-style:italic;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> =&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> setPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">(e</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">value)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#C792EA;">        placeholder</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">パスワード</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#C792EA;">        required</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">      /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#F07178;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#C792EA;"> type</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">submit</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">登録</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#F07178;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#F07178;">form</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">  )</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><hr><h3 id="🔹-2-cloudflare-workers-側で-api-register-を受け付ける" tabindex="-1">🔹 2. Cloudflare Workers 側で <code>/api/register</code> を受け付ける <a class="header-anchor" href="#🔹-2-cloudflare-workers-側で-api-register-を受け付ける" aria-label="Permalink to &quot;🔹 2. Cloudflare Workers 側で \`/api/register\` を受け付ける&quot;">​</a></h3><p>すでにバックエンド側にエンドポイントがあると思いますが、必要であれば確認します。たとえば以下のような構成：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">// backend/src/routes/register/post.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> Hono</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">hono</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> Env</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">../../types/types</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;"> Hono</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">&lt;{</span><span style="--shiki-light:#E36209;--shiki-dark:#F07178;"> Bindings</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;"> Env</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> }&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">/api/register</span><span style="--shiki-light:#032F62;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> (</span><span style="--shiki-light:#E36209;--shiki-light-font-style:inherit;--shiki-dark:#EEFFFF;--shiki-dark-font-style:italic;">c</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C792EA;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> email</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#EEFFFF;"> password</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">  // DB にユーザーを作成するロジック</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;">  // JWT セッションの生成など</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> c</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#82AAFF;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;"> success</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#FF9CAC;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#24292E;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;">export</span><span style="--shiki-light:#D73A49;--shiki-light-font-style:inherit;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;"> app</span><span style="--shiki-light:#24292E;--shiki-dark:#89DDFF;">;</span></span></code></pre></div><hr><h3 id="🔹-3-env-production-で-cloudflare-側に-jwt-secret-などをセット" tabindex="-1">🔹 3. <code>.env.production</code> で Cloudflare 側に JWT_SECRET などをセット <a class="header-anchor" href="#🔹-3-env-production-で-cloudflare-側に-jwt-secret-などをセット" aria-label="Permalink to &quot;🔹 3. \`.env.production\` で Cloudflare 側に JWT_SECRET などをセット&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">JWT_SECRET</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">your-production-secret</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">JWT_ISSUER</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">kaikyou-shop</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">JWT_AUDIENCE</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;">kaikyou-shop-users</span></span></code></pre></div><p>Cloudflare 上では <code>wrangler.toml</code> に <code>vars</code> として書くか、ダッシュボードから設定できます。</p><hr><h3 id="🔹-4-wrangler-で本番にデプロイして実験" tabindex="-1">🔹 4. wrangler で本番にデプロイして実験！ <a class="header-anchor" href="#🔹-4-wrangler-で本番にデプロイして実験" aria-label="Permalink to &quot;🔹 4. wrangler で本番にデプロイして実験！&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> deploy</span><span style="--shiki-light:#6A737D;--shiki-light-font-style:inherit;--shiki-dark:#545454;--shiki-dark-font-style:italic;"> # wrangler publish を叩くスクリプト</span></span></code></pre></div><p>デプロイ先の URL（例：<code>https://kaikyou-shop.pages.dev</code>）にアクセスして、実際に登録・セッションが動くかチェック。</p><hr><h3 id="✅-本番で試すメリット" tabindex="-1">✅ 本番で試すメリット <a class="header-anchor" href="#✅-本番で試すメリット" aria-label="Permalink to &quot;✅ 本番で試すメリット&quot;">​</a></h3><ul><li><strong>JWT やセッションの一連の流れを本番仕様で確認可能</strong></li><li><strong>ブラウザからの CORS、クッキー、セキュリティ挙動をリアルに検証</strong></li><li><strong>Vitest で苦労する「環境変数 / モック」から解放される</strong></li></ul><hr><p>必要であれば：</p><ul><li><code>register</code> のバックエンドコード確認</li><li>CORS やクッキーの動作確認</li><li>実際に登録〜ログイン後の <code>Authorization</code> ヘッダーの挙動確認</li></ul><p>…など、一緒に進められます。</p><p>Next.js 側フォームと Cloudflare 側 API の疎通テストから始めましょうか？または、<code>/api/register</code> のコード貼っていただければレビュー・補完します。</p><p>了解です、それなら非常にスムーズですね！🎯 Cloudflare Workers 側で全 API を自由に上書きできるなら、以下のような開発・検証フローがかなり現実的で効率的です：</p><hr><h3 id="✅-本番近似環境での開発-実機検証フロー-おすすめ" tabindex="-1">✅ <strong>本番近似環境での開発＆実機検証フロー（おすすめ）</strong> <a class="header-anchor" href="#✅-本番近似環境での開発-実機検証フロー-おすすめ" aria-label="Permalink to &quot;✅ **本番近似環境での開発＆実機検証フロー（おすすめ）**&quot;">​</a></h3><ol><li><p><strong>Next.js 側にフォームや UI を実装</strong></p><ul><li><code>register</code>, <code>login</code>, <code>logout</code>, <code>profile</code> など必要なフォーム追加。</li></ul></li><li><p><strong>Cloudflare Workers 側に本番同等の API を実装</strong></p><ul><li><code>/api/register</code>、<code>/api/login</code> などのエンドポイントを整備。</li><li>JWT トークンの発行と検証を実装。</li><li>D1 への <code>INSERT</code>, <code>SELECT</code>, <code>DELETE</code> 処理を含める。</li></ul></li><li><p><strong>JWT + セッションが意図通り動作するかブラウザ上で検証</strong></p><ul><li>ログイン後、JWT がローカルストレージ or Cookie にセットされているか確認。</li><li>API へ <code>Authorization: Bearer &lt;token&gt;</code> 付きリクエストが通るか確認。</li><li><code>logout</code> 後、トークン無効化と API 拒否が行われるか確認。</li></ul></li><li><p><strong>Cloudflare のログやレスポンスで動作確認</strong></p><ul><li><code>wrangler tail</code> で Cloudflare Workers のログをリアルタイムに確認可能。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> wrangler</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> tail</span></span></code></pre></div></li><li><p><strong>問題が起きたら Vitest に戻って単体の動作確認（オプション）</strong></p></li></ol><hr><h3 id="🔧-補足" tabindex="-1">🔧 補足 <a class="header-anchor" href="#🔧-補足" aria-label="Permalink to &quot;🔧 補足&quot;">​</a></h3><ul><li><strong>セキュリティ的には <code>secure</code>, <code>httpOnly</code>, <code>SameSite</code> cookie 設定</strong> をお忘れなく（本番での JWT セッション管理に必要）。</li><li><strong>D1 スキーマとデータの整合性</strong>（例：一意性制約・外部キー）は、本番投入前に Cloudflare ダッシュボードか CLI で確認しておくと安心。</li></ul><hr><p>必要であれば、Next.js 側のログイン後の JWT 保存処理（Cookie or localStorage）や、Cloudflare Workers 側の JWT 発行ロジックのベストプラクティスについてもお手伝いできます。</p><p>次はフロントから <code>register</code> or <code>login</code> の API を試しますか？</p><p><strong><code>node_modules</code> の再インストール</strong> Windows 環境で <code>rm -rf node_modules &amp;&amp; npm install</code> に相当するコマンドは、以下のように PowerShell またはコマンドプロンプトで実行できます：</p><h3 id="powershell-用-推奨" tabindex="-1">PowerShell 用（推奨）： <a class="header-anchor" href="#powershell-用-推奨" aria-label="Permalink to &quot;PowerShell 用（推奨）：&quot;">​</a></h3><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">del package</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">lock.json</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#82AAFF;">Remove-Item</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">Recurse </span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">Force .\\node_modules</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#82AAFF;">Remove-Item</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">Force package</span><span style="--shiki-light:#D73A49;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">lock.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">npm install</span></span></code></pre></div><h3 id="コマンドプロンプト-cmd-exe-用" tabindex="-1">コマンドプロンプト（cmd.exe）用： <a class="header-anchor" href="#コマンドプロンプト-cmd-exe-用" aria-label="Permalink to &quot;コマンドプロンプト（cmd.exe）用：&quot;">​</a></h3><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">rmdir /s /q node_modules</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#EEFFFF;">npm install</span></span></code></pre></div><p>どちらも <code>node_modules</code> ディレクトリを削除してから依存関係を再インストールします。</p><h3 id="typescript-の再起動" tabindex="-1"><strong>TypeScript の再起動</strong> <a class="header-anchor" href="#typescript-の再起動" aria-label="Permalink to &quot;**TypeScript の再起動**&quot;">​</a></h3><p>TypeScript サーバーを再起動して、キャッシュをクリアします。VS Code の場合、以下の手順で再起動できます。</p><ol><li><code>Ctrl + Shift + P</code> を押します。</li><li><code>TypeScript: Restart TS server</code> を選択します。 <img src="`+h+`" alt="alt text"></li></ol><p>ありがとうございます、ログとエラーメッセージを確認する限り、<code>wrangler</code> が一時的に生成したファイル（<code>.wrangler/tmp/...</code>）を読み込もうとして失敗しています。これは <strong>バンドル中の内部依存が壊れているか、キャッシュ不整合</strong> が原因です。以下の手順で修正を試してください。</p><hr><h2 id="✅-解決手順-キャッシュ削除と再ビルド" tabindex="-1">✅ 解決手順：キャッシュ削除と再ビルド <a class="header-anchor" href="#✅-解決手順-キャッシュ削除と再ビルド" aria-label="Permalink to &quot;✅ 解決手順：キャッシュ削除と再ビルド&quot;">​</a></h2><ol><li><p><strong>Wrangler のキャッシュを削除</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">rd</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> /s</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> /q</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> .wrangler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">rd</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> /s</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> /q</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> node_modules</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">del</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> package-lock.json</span></span></code></pre></div></li><li><p><strong>依存を再インストール</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> install</span></span></code></pre></div></li><li><p><strong><code>wrangler</code> を再起動</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light material-theme-darker vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#FFCB6B;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> wrangler</span><span style="--shiki-light:#032F62;--shiki-dark:#C3E88D;"> dev</span></span></code></pre></div></li></ol><hr><p>以下に、a さんが作成した各テストケースごとに対応する <code>logout.ts</code> の処理コードを <strong>対応コードブロック付きで明示</strong> します。</p><hr><p>PS D:\\next-projects\\kaikyou-shop\\frontend&gt; npm ls --all frontend@0.1.0 D:\\next-projects\\kaikyou-shop\\frontend ├─┬ @eslint/eslintrc@3.3.1 │ ├─┬ ajv@6.12.6 │ │ ├── fast-deep-equal@3.1.3 deduped │ │ ├── fast-json-stable-stringify@2.1.0 │ │ ├── json-schema-traverse@0.4.1 │ │ └─┬ uri-js@4.4.1 │ │ └── punycode@2.3.1 │ ├─┬ debug@4.4.0 │ │ └── ms@2.1.3 │ ├─┬ espree@10.3.0 │ │ ├─┬ acorn-jsx@5.3.2 │ │ │ └── acorn@8.14.1 deduped │ │ ├── acorn@8.14.1 │ │ └── eslint-visitor-keys@4.2.0 deduped │ ├── globals@14.0.0 │ ├── ignore@5.3.2 │ ├─┬ import-fresh@3.3.1 │ │ ├─┬ parent-module@1.0.1 │ │ │ └── callsites@3.1.0 │ │ └── resolve-from@4.0.0 │ ├─┬ js-yaml@4.1.0 │ │ └── argparse@2.0.1 │ ├─┬ minimatch@3.1.2 │ │ └─┬ brace-expansion@1.1.11 │ │ ├── balanced-match@1.0.2 │ │ └── concat-map@0.0.1 │ └── strip-json-comments@3.1.1 ├─┬ @heroicons/react@2.2.0 │ └── react@18.3.1 deduped ├─┬ @tailwindcss/postcss@4.1.6 │ ├── @alloc/quick-lru@5.2.0 │ ├─┬ @tailwindcss/node@4.1.6 │ │ ├─┬ @ampproject/remapping@2.3.0 │ │ │ ├─┬ @jridgewell/gen-mapping@0.3.8 │ │ │ │ ├── @jridgewell/set-array@1.2.1 │ │ │ │ ├── @jridgewell/sourcemap-codec@1.5.0 deduped │ │ │ │ └── @jridgewell/trace-mapping@0.3.25 deduped │ │ │ └─┬ @jridgewell/trace-mapping@0.3.25 │ │ │ ├── @jridgewell/resolve-uri@3.1.2 │ │ │ └── @jridgewell/sourcemap-codec@1.5.0 deduped │ │ ├─┬ enhanced-resolve@5.18.1 │ │ │ ├── graceful-fs@4.2.11 │ │ │ └── tapable@2.2.1 │ │ ├── jiti@2.4.2 deduped │ │ ├─┬ lightningcss@1.29.2 │ │ │ ├── detect-libc@2.0.4 deduped │ │ │ ├── UNMET OPTIONAL DEPENDENCY lightningcss-darwin-arm64@1.29.2 │ │ │ ├── UNMET OPTIONAL DEPENDENCY lightningcss-darwin-x64@1.29.2 │ │ │ ├── UNMET OPTIONAL DEPENDENCY lightningcss-freebsd-x64@1.29.2 │ │ │ ├── UNMET OPTIONAL DEPENDENCY lightningcss-linux-arm-gnueabihf@1.29.2 │ │ │ ├── UNMET OPTIONAL DEPENDENCY lightningcss-linux-arm64-gnu@1.29.2 │ │ │ ├── UNMET OPTIONAL DEPENDENCY lightningcss-linux-arm64-musl@1.29.2 │ │ │ ├── UNMET OPTIONAL DEPENDENCY lightningcss-linux-x64-gnu@1.29.2 │ │ │ ├── UNMET OPTIONAL DEPENDENCY lightningcss-linux-x64-musl@1.29.2 │ │ │ ├── UNMET OPTIONAL DEPENDENCY lightningcss-win32-arm64-msvc@1.29.2 │ │ │ └── lightningcss-win32-x64-msvc@1.29.2 │ │ ├─┬ magic-string@0.30.17 │ │ │ └── @jridgewell/sourcemap-codec@1.5.0 │ │ ├── source-map-js@1.2.1 deduped │ │ └── tailwindcss@4.1.6 deduped │ ├─┬ @tailwindcss/oxide@4.1.6 │ │ ├── UNMET OPTIONAL DEPENDENCY @tailwindcss/oxide-android-arm64@4.1.6 │ │ ├── UNMET OPTIONAL DEPENDENCY @tailwindcss/oxide-darwin-arm64@4.1.6 │ │ ├── UNMET OPTIONAL DEPENDENCY @tailwindcss/oxide-darwin-x64@4.1.6 │ │ ├── UNMET OPTIONAL DEPENDENCY @tailwindcss/oxide-freebsd-x64@4.1.6 │ │ ├── UNMET OPTIONAL DEPENDENCY @tailwindcss/oxide-linux-arm-gnueabihf@4.1.6 │ │ ├── UNMET OPTIONAL DEPENDENCY @tailwindcss/oxide-linux-arm64-gnu@4.1.6 │ │ ├── UNMET OPTIONAL DEPENDENCY @tailwindcss/oxide-linux-arm64-musl@4.1.6 │ │ ├── UNMET OPTIONAL DEPENDENCY @tailwindcss/oxide-linux-x64-gnu@4.1.6 │ │ ├── UNMET OPTIONAL DEPENDENCY @tailwindcss/oxide-linux-x64-musl@4.1.6 │ │ ├── UNMET OPTIONAL DEPENDENCY @tailwindcss/oxide-wasm32-wasi@4.1.6 │ │ ├── UNMET OPTIONAL DEPENDENCY @tailwindcss/oxide-win32-arm64-msvc@4.1.6 │ │ ├── @tailwindcss/oxide-win32-x64-msvc@4.1.6 │ │ ├── detect-libc@2.0.4 │ │ └─┬ tar@7.4.3 │ │ ├─┬ @isaacs/fs-minipass@4.0.1 │ │ │ └── minipass@7.1.2 deduped │ │ ├── chownr@3.0.0 │ │ ├── minipass@7.1.2 │ │ ├─┬ minizlib@3.0.2 │ │ │ └── minipass@7.1.2 deduped │ │ ├── mkdirp@3.0.1 │ │ └── yallist@5.0.0 │ ├── postcss@8.5.3 deduped │ └── tailwindcss@4.1.6 deduped ├─┬ @types/node@20.17.46 │ └── undici-types@6.19.8 ├─┬ @types/react-dom@19.1.3 │ └── @types/react@19.1.3 deduped ├─┬ @types/react@19.1.3 │ └── csstype@3.1.3 ├─┬ autoprefixer@10.4.21 │ ├─┬ browserslist@4.24.5 │ │ ├── caniuse-lite@1.0.30001717 deduped │ │ ├── electron-to-chromium@1.5.151 │ │ ├── node-releases@2.0.19 │ │ └─┬ update-browserslist-db@1.1.3 │ │ ├── browserslist@4.24.5 deduped │ │ ├── escalade@3.2.0 │ │ └── picocolors@1.1.1 deduped │ ├── caniuse-lite@1.0.30001717 │ ├── fraction.js@4.3.7 │ ├── normalize-range@0.1.2 │ ├── picocolors@1.1.1 │ ├── postcss-value-parser@4.2.0 │ └── postcss@8.5.3 deduped ├─┬ eslint-config-next@15.3.1 │ ├─┬ @next/eslint-plugin-next@15.3.1 │ │ └─┬ fast-glob@3.3.1</p>`,108)]))}const D=i(l,[["render",k]]);export{g as __pageData,D as default};
