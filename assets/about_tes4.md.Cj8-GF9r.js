import{_ as a,c as r,o as e,ae as o}from"./chunks/framework.4ukD4ZLJ.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"about/tes4.md","filePath":"about/tes4.md"}'),s={name:"about/tes4.md"};function l(i,t,n,d,h,c){return e(),r("div",null,t[0]||(t[0]=[o('<h3 id="🎯-結論から言うと" tabindex="-1">🎯 結論から言うと： <a class="header-anchor" href="#🎯-結論から言うと" aria-label="Permalink to &quot;🎯 結論から言うと：&quot;">​</a></h3><p><strong>設計の目的やフェーズによって異なりますが、一般的には ER 図（もしくはそれに準じる設計図）を先に作る方がベターです。</strong></p><hr><h3 id="💡-理由を簡単に解説します" tabindex="-1">💡 理由を簡単に解説します： <a class="header-anchor" href="#💡-理由を簡単に解説します" aria-label="Permalink to &quot;💡 理由を簡単に解説します：&quot;">​</a></h3><h4 id="✅-er-図を先に作るメリット" tabindex="-1">✅ ER 図を先に作るメリット： <a class="header-anchor" href="#✅-er-図を先に作るメリット" aria-label="Permalink to &quot;✅ ER 図を先に作るメリット：&quot;">​</a></h4><ul><li><strong>全体の構造が視覚的に把握できる</strong></li><li><strong>テーブル間の関係（リレーション）を明確に定義できる</strong></li><li><strong>レビューしやすく、非エンジニアとも共有しやすい</strong></li><li><strong>後からスキーマを修正する手間が減る</strong></li></ul><h4 id="✅-schema-sql-を先に書くケース" tabindex="-1">✅ schema.sql を先に書くケース： <a class="header-anchor" href="#✅-schema-sql-を先に書くケース" aria-label="Permalink to &quot;✅ schema.sql を先に書くケース：&quot;">​</a></h4><ul><li><strong>小規模・試作開発などで設計より実装優先</strong></li><li><strong>設計書よりも先に実動作を確認したい場合</strong></li><li><strong>経験豊富な開発者が頭の中に ER 図を描けている場合</strong></li></ul><hr><h3 id="🛠-開発フローの一例" tabindex="-1">🛠 開発フローの一例： <a class="header-anchor" href="#🛠-開発フローの一例" aria-label="Permalink to &quot;🛠 開発フローの一例：&quot;">​</a></h3><ol><li><p><strong>要件定義</strong><br> ユーザー登録・商品・注文など、必要な機能を洗い出す。</p></li><li><p><strong>ER 図を作成（手書き・draw.io・dbdiagram.io など）</strong><br> 各テーブルとリレーションの設計を視覚化。</p></li><li><p><strong>レビュー・修正（チームで議論）</strong></p></li><li><p><strong>schema.sql を作成</strong><br> ER 図を元にテーブル定義を SQL で書く。</p></li><li><p><strong>DB に適用＆マイグレーションの仕組みを導入</strong></p></li></ol><hr><h3 id="🧭-まとめると" tabindex="-1">🧭 まとめると： <a class="header-anchor" href="#🧭-まとめると" aria-label="Permalink to &quot;🧭 まとめると：&quot;">​</a></h3><table tabindex="0"><thead><tr><th>フェーズ</th><th>優先すべき作業</th></tr></thead><tbody><tr><td>初期設計</td><td>✅ ER 図</td></tr><tr><td>実装フェーズ</td><td>✅ schema.sql</td></tr><tr><td>修正や拡張時</td><td>✅ 両方を連携して修正</td></tr></tbody></table><hr><p>必要なら、現在の ER 図の SVG 版と一緒に <code>schema.sql</code> の改善提案もできますよ。どうしますか？</p>',16)]))}const b=a(s,[["render",l]]);export{p as __pageData,b as default};
